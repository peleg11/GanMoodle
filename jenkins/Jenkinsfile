pipeline {
    agent { docker { image 'python:3.8-buster' } }
    triggers {
      githubPush()
  }

    stages {
        stage('Build') {
            steps {
                sh 'python --version'
            }

        }
    stage('Migrate') {
        steps{
          dir("Agile_inv") {
            withEnv(["HOME=${env.WORKSPACE}"]) {
                sh 'python manage.py makemigrations'
                sh 'python manage.py migrate'
            }
          }
        }
      }
        stage('setup'){
          steps{
            withEnv(["HOME=${env.WORKSPACE}"]){

            dir('jenkins'){
            sh 'python -m pip install -r requirements.txt'
            }
            echo 'hello'
          }
          }
        }

        stage('test') {

          steps {
            withEnv(["HOME=${env.WORKSPACE}"]) {
                 dir("Agile_inv") {
                    sh 'python manage.py test'
                 }
            }

        }
    }
stage('coverage') {

    steps {
        withEnv(["HOME=${env.WORKSPACE}"]) {
                    dir("Agile_inv") {
                       sh 'python -m coverage run manage.py test'
                       sh 'python -m coverage report --fail-under=81'

                    }
        }
        }
    }
stage('pylint') {

    steps {
        withEnv(["HOME=${env.WORKSPACE}"]) {

                        dir("Agile_inv") {
                            sh 'pip install pylint'
                            sh 'pip install pylint-django'
                            sh 'python -m  pylint  --fail-under=8  Agile_inv sprint userStory login project msgAdmin'
                        }

        }
        }
    }

}
        /*  stage('Run Unit Tests') {
                steps {
            dir("./") {
              withEnv(["HOME=${env.WORKSPACE}"]) {
                sh "python -m coverage run manage.py test --tag=unit-test"

              }
            }
          }
        */}
    }

}
